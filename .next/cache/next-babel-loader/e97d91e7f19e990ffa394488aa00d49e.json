{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\tita_\\\\Documents\\\\NextJs\\\\kanye-app\\\\kanye-app\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Content from '../components/Content';\nimport Header from '../components/Header';\nimport Card from '../components/Card';\nimport Quote from '../components/Quote';\nimport { getQuote } from '../lib/quote-api';\nvar HELP_TEXT = {\n  fetch: 'With an external fetch'\n};\n\nvar Index = function Index(_ref) {\n  var quotes = _ref.quotes;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, __jsx(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, \"Kanye Quotes\"), quotes.map(function (_ref2) {\n    var id = _ref2.id,\n        quote = _ref2.quote;\n    return __jsx(Card, {\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, __jsx(Quote, {\n      text: quote,\n      helpText: HELP_TEXT[id],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }));\n  })));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref4 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(_ref3) {\n    var req, getHost, quotes;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref3.req;\n\n            getHost = function getHost(path) {\n              if (!req) return path;\n              var host = req.headers.host;\n\n              if (host.startsWith('localhost')) {\n                return \"http://\".concat(host).concat(path);\n              }\n\n              return \"https://\".concat(host).concat(path);\n            };\n\n            _context.t0 = _objectSpread;\n            _context.t1 = {};\n            _context.next = 6;\n            return getQuote('https://api.kayne.rest');\n\n          case 6:\n            _context.t2 = _context.sent;\n            _context.t3 = {\n              id: 'fetch'\n            };\n            _context.t4 = (0, _context.t0)(_context.t1, _context.t2, _context.t3);\n            _context.t5 = _objectSpread;\n            _context.t6 = {};\n            _context.next = 13;\n            return getQuote(getHost('api/quote'));\n\n          case 13:\n            _context.t7 = _context.sent;\n            _context.t8 = {\n              id: \"api-routes\"\n            };\n            _context.t9 = (0, _context.t5)(_context.t6, _context.t7, _context.t8);\n            quotes = [_context.t4, _context.t9];\n            return _context.abrupt(\"return\", {\n              quotes: quotes\n            });\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\tita_\\Documents\\NextJs\\kanye-app\\kanye-app\\pages\\index.js"],"names":["Layout","Content","Header","Card","Quote","getQuote","HELP_TEXT","fetch","Index","quotes","map","id","quote","getInitialProps","req","getHost","path","host","headers","startsWith"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,IAAMC,SAAS,GAAE;AACbC,EAAAA,KAAK,EAAG;AADK,CAAjB;;AAGA,IAAMC,KAAK,GAAE,SAAPA,KAAO;AAAA,MAAIC,MAAJ,QAAIA,MAAJ;AAAA,SACT,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEKA,MAAM,CAACC,GAAP,CAAW;AAAA,QAAEC,EAAF,SAAEA,EAAF;AAAA,QAAMC,KAAN,SAAMA,KAAN;AAAA,WACR,MAAC,IAAD;AAAM,MAAA,GAAG,EAAED,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,KAAD;AAAO,MAAA,IAAI,EAAEC,KAAb;AAAoB,MAAA,QAAQ,EAAEN,SAAS,CAACK,EAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADQ;AAAA,GAAX,CAFL,CADJ,CADS;AAAA,CAAb;;AAaAH,KAAK,CAACK,eAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAOC,YAAAA,GAAP,SAAOA,GAAP;;AACdC,YAAAA,OADc,GACJ,SAAVA,OAAU,CAAAC,IAAI,EAAG;AACnB,kBAAI,CAACF,GAAL,EAAU,OAAOE,IAAP;AADS,kBAGZC,IAHY,GAGJH,GAAG,CAACI,OAHA,CAGZD,IAHY;;AAKnB,kBAAGA,IAAI,CAACE,UAAL,CAAgB,WAAhB,CAAH,EAAgC;AAC5B,wCAAiBF,IAAjB,SAAwBD,IAAxB;AACH;;AACD,uCAAkBC,IAAlB,SAAyBD,IAAzB;AACH,aAVmB;;AAAA;AAAA;AAAA;AAAA,mBAYLX,QAAQ,CAAC,wBAAD,CAZH;;AAAA;AAAA;AAAA;AAYgCM,cAAAA,EAAE,EAAC;AAZnC;AAAA;AAAA;AAAA;AAAA;AAAA,mBAaLN,QAAQ,CAACU,OAAO,CAAC,WAAD,CAAR,CAbH;;AAAA;AAAA;AAAA;AAa4BJ,cAAAA,EAAE,EAAE;AAbhC;AAAA;AAWdF,YAAAA,MAXc;AAAA,6CAgBb;AAAEA,cAAAA,MAAM,EAANA;AAAF,aAhBa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAmBA,eAAeD,KAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport Content from '../components/Content';\r\nimport Header from '../components/Header';\r\nimport Card from '../components/Card';\r\nimport Quote from '../components/Quote';\r\nimport {getQuote} from '../lib/quote-api';\r\nconst HELP_TEXT ={\r\n    fetch : 'With an external fetch'\r\n};\r\nconst Index =({  quotes  })=> (\r\n    <Layout>\r\n        <Content>\r\n            <Header>Kanye Quotes</Header>\r\n            {quotes.map(({id, quote})=> (\r\n                <Card key={id}>\r\n                    <Quote text={quote} helpText={HELP_TEXT[id]}/>\r\n                </Card>\r\n            ))}\r\n        </Content>\r\n    </Layout>\r\n);\r\n\r\nIndex.getInitialProps = async({req}) =>{\r\n    const getHost = path =>{\r\n        if (!req) return path;\r\n\r\n        const {host} = req.headers;\r\n\r\n        if(host.startsWith('localhost')){\r\n            return `http://${host}${path}`;\r\n        }\r\n        return `https://${host}${path}`;\r\n    };\r\n    const quotes = [\r\n        {...(await getQuote('https://api.kayne.rest')), id:'fetch'},\r\n        {...(await getQuote(getHost('api/quote'))), id: \"api-routes\"}\r\n    ];\r\n\r\n    return { quotes }\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar _jsxFileName = \"C:\\\\Users\\\\tita_\\\\Documents\\\\NextJs\\\\kanye-app\\\\kanye-app\\\\pages\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/Layout';\nimport Content from '../components/Content';\nimport Header from '../components/Header';\nimport Card from '../components/Card';\nimport Quote from '../components/Quote';\nimport { getQuote } from '../lib/quote-api';\nconst HELP_TEXT = {\n  fetch: 'With an external fetch'\n};\n\nconst Index = ({\n  quotes\n}) => __jsx(Layout, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11\n  },\n  __self: this\n}, __jsx(Content, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12\n  },\n  __self: this\n}, __jsx(Header, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, \"Kanye Quotes\"), quotes.map(({\n  id,\n  quote\n}) => __jsx(Card, {\n  key: id,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, __jsx(Quote, {\n  text: quote,\n  helpText: HELP_TEXT[id],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})))));\n\nIndex.getInitialProps = async ({\n  req\n}) => {\n  const quotes = [_objectSpread({}, (await getQuote()), {\n    id: 'fetch'\n  })];\n  return {\n    quotes\n  };\n};\n\nexport default Index;","map":{"version":3,"sources":["C:\\Users\\tita_\\Documents\\NextJs\\kanye-app\\kanye-app\\pages\\index.js"],"names":["Layout","Content","Header","Card","Quote","getQuote","HELP_TEXT","fetch","Index","quotes","map","id","quote","getInitialProps","req"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,MAAMC,SAAS,GAAE;AACbC,EAAAA,KAAK,EAAG;AADK,CAAjB;;AAGA,MAAMC,KAAK,GAAE,CAAC;AAAGC,EAAAA;AAAH,CAAD,KACT,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKA,MAAM,CAACC,GAAP,CAAW,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA;AAAL,CAAD,KACR,MAAC,IAAD;AAAM,EAAA,GAAG,EAAED,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,MAAC,KAAD;AAAO,EAAA,IAAI,EAAEC,KAAb;AAAoB,EAAA,QAAQ,EAAEN,SAAS,CAACK,EAAD,CAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADH,CAFL,CADJ,CADJ;;AAaAH,KAAK,CAACK,eAAN,GAAwB,OAAM;AAACC,EAAAA;AAAD,CAAN,KAAe;AACnC,QAAML,MAAM,GAAG,oBACP,MAAMJ,QAAQ,EADP;AACWM,IAAAA,EAAE,EAAC;AADd,KAAf;AAGA,SAAO;AAAEF,IAAAA;AAAF,GAAP;AACH,CALD;;AAOA,eAAeD,KAAf","sourcesContent":["import Layout from '../components/Layout';\r\nimport Content from '../components/Content';\r\nimport Header from '../components/Header';\r\nimport Card from '../components/Card';\r\nimport Quote from '../components/Quote';\r\nimport {getQuote} from '../lib/quote-api';\r\nconst HELP_TEXT ={\r\n    fetch : 'With an external fetch'\r\n};\r\nconst Index =({  quotes  })=> (\r\n    <Layout>\r\n        <Content>\r\n            <Header>Kanye Quotes</Header>\r\n            {quotes.map(({id, quote})=> (\r\n                <Card key={id}>\r\n                    <Quote text={quote} helpText={HELP_TEXT[id]}/>\r\n                </Card>\r\n            ))}\r\n        </Content>\r\n    </Layout>\r\n)\r\n\r\nIndex.getInitialProps = async({req}) =>{\r\n    const quotes = [\r\n        {...await getQuote(), id:'fetch'}\r\n    ]\r\n    return { quotes }\r\n};\r\n\r\nexport default Index;"]},"metadata":{},"sourceType":"module"}